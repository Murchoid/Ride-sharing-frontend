/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as AuthUserSigninRouteImport } from './routes/auth/user/signin'
import { Route as AuthDriverRegisterRouteImport } from './routes/auth/driver/register'
import { Route as AuthAdminLoginRouteImport } from './routes/auth/admin/login'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthUserSigninRoute = AuthUserSigninRouteImport.update({
  id: '/auth/user/signin',
  path: '/auth/user/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthDriverRegisterRoute = AuthDriverRegisterRouteImport.update({
  id: '/auth/driver/register',
  path: '/auth/driver/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthAdminLoginRoute = AuthAdminLoginRouteImport.update({
  id: '/auth/admin/login',
  path: '/auth/admin/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/auth/admin/login': typeof AuthAdminLoginRoute
  '/auth/driver/register': typeof AuthDriverRegisterRoute
  '/auth/user/signin': typeof AuthUserSigninRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/auth/admin/login': typeof AuthAdminLoginRoute
  '/auth/driver/register': typeof AuthDriverRegisterRoute
  '/auth/user/signin': typeof AuthUserSigninRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/auth/admin/login': typeof AuthAdminLoginRoute
  '/auth/driver/register': typeof AuthDriverRegisterRoute
  '/auth/user/signin': typeof AuthUserSigninRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/demo/tanstack-query'
    | '/auth/admin/login'
    | '/auth/driver/register'
    | '/auth/user/signin'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/demo/tanstack-query'
    | '/auth/admin/login'
    | '/auth/driver/register'
    | '/auth/user/signin'
  id:
    | '__root__'
    | '/'
    | '/demo/tanstack-query'
    | '/auth/admin/login'
    | '/auth/driver/register'
    | '/auth/user/signin'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  AuthAdminLoginRoute: typeof AuthAdminLoginRoute
  AuthDriverRegisterRoute: typeof AuthDriverRegisterRoute
  AuthUserSigninRoute: typeof AuthUserSigninRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/user/signin': {
      id: '/auth/user/signin'
      path: '/auth/user/signin'
      fullPath: '/auth/user/signin'
      preLoaderRoute: typeof AuthUserSigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/driver/register': {
      id: '/auth/driver/register'
      path: '/auth/driver/register'
      fullPath: '/auth/driver/register'
      preLoaderRoute: typeof AuthDriverRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/admin/login': {
      id: '/auth/admin/login'
      path: '/auth/admin/login'
      fullPath: '/auth/admin/login'
      preLoaderRoute: typeof AuthAdminLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  AuthAdminLoginRoute: AuthAdminLoginRoute,
  AuthDriverRegisterRoute: AuthDriverRegisterRoute,
  AuthUserSigninRoute: AuthUserSigninRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
